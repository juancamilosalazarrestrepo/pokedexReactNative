{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"name\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Formik, useField } from \"formik\";\nimport StyledTextInput from \"../components/StyledTextInput.jsx\";\nimport StyledText from \"../components/StyledText.jsx\";\nimport { loginValidationschema } from \"../validationSchemas/login.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar initialValues = {\n  email: \"\",\n  password: \"\"\n};\nvar styles = StyleSheet.create({\n  error: {\n    color: \"red\",\n    fontSize: 12,\n    marginBottom: 20,\n    marginTop: -10,\n    marginLeft: 5\n  },\n  form: {\n    margin: 12\n  }\n});\n\nvar FormikInputValues = function FormikInputValues(_ref) {\n  var name = _ref.name,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useField = useField(name),\n      _useField2 = _slicedToArray(_useField, 3),\n      field = _useField2[0],\n      meta = _useField2[1],\n      helpers = _useField2[2];\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(StyledTextInput, _objectSpread({\n      error: meta.error,\n      value: field.value,\n      onChangeText: function onChangeText(value) {\n        return helpers.setValue(value);\n      }\n    }, props)), meta.error && _jsx(StyledText, {\n      style: styles.error,\n      children: meta.error\n    })]\n  });\n};\n\nexport default function LogInPage() {\n  return _jsx(Formik, {\n    validationSchema: loginValidationschema,\n    initialValues: initialValues,\n    onSubmit: function onSubmit(values) {\n      return console.log(values);\n    },\n    children: function children(_ref2) {\n      var handleChange = _ref2.handleChange,\n          handleSubmit = _ref2.handleSubmit,\n          values = _ref2.values;\n      return _jsxs(View, {\n        style: styles.form,\n        children: [_jsx(FormikInputValues, {\n          name: \"email\",\n          placeholder: \"E-mail\"\n        }), _jsx(FormikInputValues, {\n          name: \"password\",\n          placeholder: \"Password\",\n          secureTextEntry: true\n        }), _jsx(Button, {\n          onPress: handleSubmit,\n          title: \"Log In\"\n        })]\n      });\n    }\n  });\n}","map":{"version":3,"names":["Formik","useField","StyledTextInput","StyledText","loginValidationschema","initialValues","email","password","styles","StyleSheet","create","error","color","fontSize","marginBottom","marginTop","marginLeft","form","margin","FormikInputValues","name","props","field","meta","helpers","value","setValue","LogInPage","values","console","log","handleChange","handleSubmit"],"sources":["C:/Users/B2Btic/Documents/CursoReactNative/calificar-repos/src/pages/LogIn.jsx"],"sourcesContent":["import { Button, Text, TextInput, View, StyleSheet } from \"react-native\";\r\nimport { Formik, useField } from \"formik\";\r\nimport StyledTextInput from \"../components/StyledTextInput.jsx\";\r\nimport StyledText from \"../components/StyledText.jsx\";\r\nimport { loginValidationschema} from \"../validationSchemas/login.js\";\r\n\r\nconst initialValues = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    error:{\r\ncolor:\"red\",\r\nfontSize:12,\r\nmarginBottom:20,\r\nmarginTop:-10,\r\nmarginLeft:5\r\n\r\n\r\n    },\r\n  form: {\r\n    margin: 12,\r\n  },\r\n});\r\n\r\nconst FormikInputValues = ({ name, ...props }) => {\r\n  const [field, meta, helpers] = useField(name);\r\n\r\n  return (\r\n    <>\r\n      <StyledTextInput\r\n      error={meta.error}\r\n        value={field.value}\r\n        onChangeText={(value) => helpers.setValue(value)}\r\n        {...props}\r\n      />\r\n      {meta.error && <StyledText style={styles.error}>{meta.error}</StyledText>}\r\n    </>\r\n  );\r\n};\r\n\r\n/*const validate = (values) => {\r\n  const errors = {};\r\n\r\n  if (!values.email) {\r\n    errors.email = \"Email Is Required\";\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9-]+\\.[A-Z]{2,6}$/i.test(values.email)) {\r\n    errors.email = \"Por Favor ingresa un Email valido\";\r\n  }\r\n\r\n  console.log(errors);\r\n\r\n  return errors;\r\n};*/\r\n\r\nexport default function LogInPage() {\r\n  return (\r\n    <Formik\r\n      validationSchema={loginValidationschema}\r\n      initialValues={initialValues}\r\n      onSubmit={(values) => console.log(values)}\r\n    >\r\n      {({ handleChange, handleSubmit, values }) => {\r\n        return (\r\n          <View style={styles.form}>\r\n            <FormikInputValues name=\"email\" placeholder=\"E-mail\" />\r\n            <FormikInputValues\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              secureTextEntry\r\n            />\r\n            <Button onPress={handleSubmit} title=\"Log In\" />\r\n          </View>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;AACA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,QAAjC;AACA,OAAOC,eAAP;AACA,OAAOC,UAAP;AACA,SAASC,qBAAT;;;;AAEA,IAAMC,aAAa,GAAG;EACpBC,KAAK,EAAE,EADa;EAEpBC,QAAQ,EAAE;AAFU,CAAtB;AAKA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;EAC7BC,KAAK,EAAC;IACVC,KAAK,EAAC,KADI;IAEVC,QAAQ,EAAC,EAFC;IAGVC,YAAY,EAAC,EAHH;IAIVC,SAAS,EAAC,CAAC,EAJD;IAKVC,UAAU,EAAC;EALD,CADuB;EAU/BC,IAAI,EAAE;IACJC,MAAM,EAAE;EADJ;AAVyB,CAAlB,CAAf;;AAeA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAAwB;EAAA,IAArBC,IAAqB,QAArBA,IAAqB;EAAA,IAAZC,KAAY;;EAChD,gBAA+BpB,QAAQ,CAACmB,IAAD,CAAvC;EAAA;EAAA,IAAOE,KAAP;EAAA,IAAcC,IAAd;EAAA,IAAoBC,OAApB;;EAEA,OACE;IAAA,WACE,KAAC,eAAD;MACA,KAAK,EAAED,IAAI,CAACZ,KADZ;MAEE,KAAK,EAAEW,KAAK,CAACG,KAFf;MAGE,YAAY,EAAE,sBAACA,KAAD;QAAA,OAAWD,OAAO,CAACE,QAAR,CAAiBD,KAAjB,CAAX;MAAA;IAHhB,GAIMJ,KAJN,EADF,EAOGE,IAAI,CAACZ,KAAL,IAAc,KAAC,UAAD;MAAY,KAAK,EAAEH,MAAM,CAACG,KAA1B;MAAA,UAAkCY,IAAI,CAACZ;IAAvC,EAPjB;EAAA,EADF;AAWD,CAdD;;AA8BA,eAAe,SAASgB,SAAT,GAAqB;EAClC,OACE,KAAC,MAAD;IACE,gBAAgB,EAAEvB,qBADpB;IAEE,aAAa,EAAEC,aAFjB;IAGE,QAAQ,EAAE,kBAACuB,MAAD;MAAA,OAAYC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAAZ;IAAA,CAHZ;IAAA,UAKG,yBAA4C;MAAA,IAAzCG,YAAyC,SAAzCA,YAAyC;MAAA,IAA3BC,YAA2B,SAA3BA,YAA2B;MAAA,IAAbJ,MAAa,SAAbA,MAAa;MAC3C,OACE,MAAC,IAAD;QAAM,KAAK,EAAEpB,MAAM,CAACS,IAApB;QAAA,WACE,KAAC,iBAAD;UAAmB,IAAI,EAAC,OAAxB;UAAgC,WAAW,EAAC;QAA5C,EADF,EAEE,KAAC,iBAAD;UACE,IAAI,EAAC,UADP;UAEE,WAAW,EAAC,UAFd;UAGE,eAAe;QAHjB,EAFF,EAOE,KAAC,MAAD;UAAQ,OAAO,EAAEe,YAAjB;UAA+B,KAAK,EAAC;QAArC,EAPF;MAAA,EADF;IAWD;EAjBH,EADF;AAqBD"},"metadata":{},"sourceType":"module"}