{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { useState, useEffect } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport RepositoryItem from \"./RepositoryItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar useRepositories = function useRepositories() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      repositories = _useState2[0],\n      setRepositories = _useState2[1];\n\n  var fetchRepositories = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var response = yield global.fetch(\"http://localhost:5000/api/repositories\");\n      console.log(response);\n      var json = yield response.json();\n      setRepositories(json);\n    });\n\n    return function fetchRepositories() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchRepositories();\n    console.log(repositories);\n  }, []);\n  var repositoriesNodes = repositories ? repositories.edges.map(function (edge) {\n    return edge.node;\n  }) : [];\n  return {\n    repositories: repositoriesNodes\n  };\n};\n\nvar RepositoryList = function RepositoryList() {\n  var _useRepositories = useRepositories(),\n      repositories = _useRepositories.repositories;\n\n  return _jsx(FlatList, {\n    data: repositories,\n    ItemSeparatorComponent: function ItemSeparatorComponent() {\n      return _jsx(Text, {\n        children: \" \"\n      });\n    },\n    renderItem: function renderItem(_ref2) {\n      var repo = _ref2.item;\n      return _jsx(RepositoryItem, _objectSpread({}, repo));\n    }\n  });\n};\n\nexport default RepositoryList;","map":{"version":3,"names":["useState","useEffect","RepositoryItem","useRepositories","repositories","setRepositories","fetchRepositories","response","global","fetch","console","log","json","repositoriesNodes","edges","map","edge","node","RepositoryList","repo","item"],"sources":["C:/Users/B2Btic/Documents/CursoReactNative/calificar-repos/src/components/RepositoryList.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { FlatList, Text } from \"react-native\";\r\nimport RepositoryItem from \"./RepositoryItem\";\r\n\r\nconst useRepositories = () => {\r\n    const [repositories, setRepositories] = useState(null);\r\n    const fetchRepositories = async () => {\r\n      const response = await global.fetch(\"http://localhost:5000/api/repositories\");\r\n      console.log(response)\r\n      const json = await response.json();\r\n      setRepositories(json);\r\n    };\r\n  \r\n    useEffect(() => {\r\n      fetchRepositories();\r\n      console.log(repositories)\r\n    }, []);\r\n  \r\n    const repositoriesNodes = repositories\r\n      ? repositories.edges.map((edge) => edge.node)\r\n      : [];\r\n\r\n      return {repositories : repositoriesNodes}\r\n}\r\n\r\nconst RepositoryList = () => {\r\nconst {repositories} = useRepositories()\r\n  return (\r\n    <FlatList\r\n      data={repositories}\r\n      ItemSeparatorComponent={() => <Text> </Text>}\r\n      renderItem={({ item: repo }) => <RepositoryItem {...repo} />}\r\n    ></FlatList>\r\n  );\r\n};\r\n\r\nexport default RepositoryList;\r\n"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,OAAOC,cAAP;;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;EAC1B,gBAAwCH,QAAQ,CAAC,IAAD,CAAhD;EAAA;EAAA,IAAOI,YAAP;EAAA,IAAqBC,eAArB;;EACA,IAAMC,iBAAiB;IAAA,6BAAG,aAAY;MACpC,IAAMC,QAAQ,SAASC,MAAM,CAACC,KAAP,CAAa,wCAAb,CAAvB;MACAC,OAAO,CAACC,GAAR,CAAYJ,QAAZ;MACA,IAAMK,IAAI,SAASL,QAAQ,CAACK,IAAT,EAAnB;MACAP,eAAe,CAACO,IAAD,CAAf;IACD,CALsB;;IAAA,gBAAjBN,iBAAiB;MAAA;IAAA;EAAA,GAAvB;;EAOAL,SAAS,CAAC,YAAM;IACdK,iBAAiB;IACjBI,OAAO,CAACC,GAAR,CAAYP,YAAZ;EACD,CAHQ,EAGN,EAHM,CAAT;EAKA,IAAMS,iBAAiB,GAAGT,YAAY,GAClCA,YAAY,CAACU,KAAb,CAAmBC,GAAnB,CAAuB,UAACC,IAAD;IAAA,OAAUA,IAAI,CAACC,IAAf;EAAA,CAAvB,CADkC,GAElC,EAFJ;EAIE,OAAO;IAACb,YAAY,EAAGS;EAAhB,CAAP;AACL,CAnBD;;AAqBA,IAAMK,cAAc,GAAG,SAAjBA,cAAiB,GAAM;EAC7B,uBAAuBf,eAAe,EAAtC;EAAA,IAAOC,YAAP,oBAAOA,YAAP;;EACE,OACE,KAAC,QAAD;IACE,IAAI,EAAEA,YADR;IAEE,sBAAsB,EAAE;MAAA,OAAM,KAAC,IAAD;QAAA;MAAA,EAAN;IAAA,CAF1B;IAGE,UAAU,EAAE;MAAA,IAASe,IAAT,SAAGC,IAAH;MAAA,OAAoB,KAAC,cAAD,oBAAoBD,IAApB,EAApB;IAAA;EAHd,EADF;AAOD,CATD;;AAWA,eAAeD,cAAf"},"metadata":{},"sourceType":"module"}