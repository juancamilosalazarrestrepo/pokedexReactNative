{"ast":null,"code":"import { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nimport { onError } from 'apollo-link-error';\nimport { ApolloLink } from 'apollo-link';\nvar createApolloClient = new ApolloClient({\n  link: ApolloLink.from([onError(function (_ref) {\n    var graphQLErrors = _ref.graphQLErrors,\n        networkError = _ref.networkError;\n    if (graphQLErrors) graphQLErrors.forEach(function (_ref2) {\n      var message = _ref2.message,\n          locations = _ref2.locations,\n          path = _ref2.path;\n      return console.log(\"[GraphQL error]: Message: \" + message + \", Location: \" + locations + \", Path: \" + path);\n    });\n    if (networkError) console.log(\"[Network error]: \" + networkError);\n  }), new HttpLink({\n    uri: 'http://localhost:5000/graphql',\n    credentials: 'same-origin'\n  })]),\n  cache: new InMemoryCache()\n});\nexport default createApolloClient;","map":{"version":3,"names":["ApolloClient","InMemoryCache","HttpLink","onError","ApolloLink","createApolloClient","link","from","graphQLErrors","networkError","forEach","message","locations","path","console","log","uri","credentials","cache"],"sources":["C:/Users/B2Btic/Documents/CursoReactNative/calificar-repos/src/utils/apolloClient.js"],"sourcesContent":["\r\nimport { ApolloClient } from 'apollo-client';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { HttpLink } from 'apollo-link-http';\r\nimport { onError } from 'apollo-link-error';\r\nimport { ApolloLink } from 'apollo-link';\r\n\r\n/*const createApolloClient = () =>\r\n  new ApolloClient({\r\n    uri: \"http://localhost:5000/graphql\",\r\n  });*/\r\n\r\n\r\n\r\n  const createApolloClient = new ApolloClient({\r\n    link: ApolloLink.from([\r\n      onError(({ graphQLErrors, networkError }) => {\r\n        if (graphQLErrors)\r\n          graphQLErrors.forEach(({ message, locations, path }) =>\r\n            console.log(\r\n              `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\r\n            ),\r\n          );\r\n        if (networkError) console.log(`[Network error]: ${networkError}`);\r\n      }),\r\n      new HttpLink({\r\n        uri: 'http://localhost:5000/graphql',\r\n        credentials: 'same-origin'\r\n      })\r\n    ]),\r\n    cache: new InMemoryCache()\r\n  });\r\nexport default createApolloClient;\r\n"],"mappings":"AACA,SAASA,YAAT,QAA6B,eAA7B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,UAAT,QAA2B,aAA3B;AASE,IAAMC,kBAAkB,GAAG,IAAIL,YAAJ,CAAiB;EAC1CM,IAAI,EAAEF,UAAU,CAACG,IAAX,CAAgB,CACpBJ,OAAO,CAAC,gBAAqC;IAAA,IAAlCK,aAAkC,QAAlCA,aAAkC;IAAA,IAAnBC,YAAmB,QAAnBA,YAAmB;IAC3C,IAAID,aAAJ,EACEA,aAAa,CAACE,OAAd,CAAsB;MAAA,IAAGC,OAAH,SAAGA,OAAH;MAAA,IAAYC,SAAZ,SAAYA,SAAZ;MAAA,IAAuBC,IAAvB,SAAuBA,IAAvB;MAAA,OACpBC,OAAO,CAACC,GAAR,gCAC+BJ,OAD/B,oBACqDC,SADrD,gBACyEC,IADzE,CADoB;IAAA,CAAtB;IAKF,IAAIJ,YAAJ,EAAkBK,OAAO,CAACC,GAAR,uBAAgCN,YAAhC;EACnB,CARM,CADa,EAUpB,IAAIP,QAAJ,CAAa;IACXc,GAAG,EAAE,+BADM;IAEXC,WAAW,EAAE;EAFF,CAAb,CAVoB,CAAhB,CADoC;EAgB1CC,KAAK,EAAE,IAAIjB,aAAJ;AAhBmC,CAAjB,CAA3B;AAkBF,eAAeI,kBAAf"},"metadata":{},"sourceType":"module"}